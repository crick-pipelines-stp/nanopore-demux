process {
    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: "${params.publish_dir_mode}",
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]
}

process {
    withName: 'SAMPLESHEET_CHECK' {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: "${params.publish_dir_mode}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'DORADO_BASECALLER' {
        ext.args = "${params.dorado_device ? '--device ' + params.dorado_device : ''} ${params.dorado_both_ends ? '--barcode-both-ends' : ''}"
        publishDir = [
            path: { "${params.outdir}/dorado/basecaller" },
            mode: "${params.publish_dir_mode}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'DORADO_DEMUX' {
        ext.args = "${params.emit_bam ? '' : '--emit-fastq' }"
        publishDir = [
            path: { "${params.outdir}/dorado/demux" },
            mode: "${params.publish_dir_mode}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'CHOPPER' {
        ext.args2 = "-q ${params.min_qscore}"
        publishDir = [
            path: { "${params.outdir}/grouped/${meta.group}/${meta.user}/asf/${meta.project_id}/${meta.run_id}/filtered_reads" },
            mode: "${params.publish_dir_mode}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'SAMTOOLS_VIEW' {
        ext.args2 = "-q ${params.min_qscore}"
        publishDir = [
            path: { "${params.outdir}/grouped/${meta.group}/${meta.user}/asf/${meta.project_id}/${meta.run_id}/filtered_reads" },
            mode: "${params.publish_dir_mode}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'SAMTOOLS_CUSTOM_VIEW' {
        // ext.args = "-B"
        ext.args2 = "awk '{print \$1}'"
        ext.suffix = ".read_ids"
        ext.ext   = "txt"
        publishDir = [
            enabled: false
        ]
    }

    withName: 'SEQKIT_SEQ' {
        ext.prefix = { "${meta.id}_readids" }
        ext.args   = "-n"
        ext.extension = "txt"
        publishDir = [
            enabled: false
        ]
    }

    withName: 'CAT_READ_IDS' {
        ext.prefix = { "${meta.id}_readids.txt.gz" }
        publishDir = [
            enabled: false
        ]
    }

    withName: 'FILTER_QC' {
        ext.pre_cmd = "head -n 1 \$(ls sequencing_summary* | head -n 1) > header.txt" 
        ext.cmd = "gzip -d -c | awk 'NR==FNR {ids[\$1]; next} \$5 in ids' - \$(ls sequencing_summary* | head -n 1)"
        ext.post_cmd = { "cat header.txt ${meta.id}.seq_summary.cmd.txt > ${meta.id}.seq_summary.whead.cmd.txt" }
        ext.suffix = '.seq_summary'
        ext.ext = 'txt'
        publishDir = [
            enabled: false
        ]
    }

    withName: 'FASTQC' {
        publishDir = [
            path: { "${params.outdir}/qc/fastqc" },
            mode: "${params.publish_dir_mode}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'NANOPLOT_ALL' {
        publishDir = [
            path: { "${params.outdir}/qc/nanoplot" },
            mode: "${params.publish_dir_mode}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'NANOPLOT_GROUPED' {
        publishDir = [
            path: { "${params.outdir}/grouped/${meta.group}/${meta.user}/asf/${meta.project_id}/${meta.run_id}/qc/nanoplot" },
            mode: "${params.publish_dir_mode}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'PYCOQC_ALL' {
        publishDir = [
            path: { "${params.outdir}/qc/pycoqc" },
            mode: "${params.publish_dir_mode}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'PYCOQC_GROUPED' {
        publishDir = [
            path: { "${params.outdir}/grouped/${meta.group}/${meta.user}/asf/${meta.project_id}/${meta.run_id}/qc/pycoqc" },
            mode: "${params.publish_dir_mode}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'TOULLIGQC_ALL' {
        publishDir = [
            path: { "${params.outdir}/qc/toulligqc" },
            mode: "${params.publish_dir_mode}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'TOULLIGQC_GROUPED' {
        publishDir = [
            path: { "${params.outdir}/grouped/${meta.group}/${meta.user}/asf/${meta.project_id}/${meta.run_id}/qc/toulligqc" },
            mode: "${params.publish_dir_mode}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'CUSTOM_DUMPSOFTWAREVERSIONS' {
        publishDir = [
            enabled: false
        ]
    }

    withName: 'MULTIQC_ALL' {
        publishDir = [
            path: { "${params.outdir}/qc/multiqc" },
            mode: "${params.publish_dir_mode}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'MULTIQC_GROUPED' {
        publishDir = [
            path: { "${params.outdir}/grouped/${meta.group}/${meta.user}/asf/${meta.project_id}/${meta.run_id}/qc/multiqc" },
            mode: "${params.publish_dir_mode}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
}
